;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-box" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M42.656 213.344l469.344-213.344 469.344 213.344 0 597.344-469.344 213.344-469.344-213.344 0-597.344zM469.344 454.016l-341.344-155.008 0 456.672 341.344 155.328 0-456.992zM896 755.68l0-456.672-341.344 155.008 0 456.992zM826.656 236.672l-314.656-143.008-314.656 143.008 314.656 143.008z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-key" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M904.722286 243.712q20.48 118.784-28.672 220.16t-153.6 119.808q-67.584 12.288-133.12 2.048l-120.832 198.656-71.68 12.288-106.496 169.984q-14.336 28.672-47.104 32.768l-77.824 14.336q-12.288 4.096-22.528-4.096t-12.288-22.528l-16.384-100.352q-8.192-30.72 12.288-57.344l264.192-395.264q-24.576-51.2-38.912-122.88-18.432-108.544 54.272-191.488t189.44-103.424q108.544-20.48 199.68 46.08t109.568 181.248zM775.698286 321.536q30.72-45.056 21.504-99.328t-52.224-84.992q-43.008-32.768-94.208-22.528t-81.92 55.296q-8.192 12.288-12.288 23.552t-1.024 20.48 5.12 16.384 13.312 17.408 18.432 15.36 22.528 16.384 23.552 17.408q6.144 4.096 22.528 16.384t23.552 16.384 19.456 12.288 19.456 8.192 17.408-1.024 18.432-8.192 16.384-19.456z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-right" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M812.502052 448.472128 498.854609 629.556393 185.207166 810.641681 185.207166 448.472128 185.207166 86.303598 498.854609 267.387863Z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-speech" viewBox="0 0 1025 1024">' +
    '' +
    '<path d="M604.295419 655.68896c61.897214-26.095062 110.760907-61.615008 146.567063-106.573849 35.802152-44.948834 53.70523-93.89859 53.70523-146.85127 0-52.954682-17.903078-101.908441-53.71924-146.859276-35.802152-44.950835-84.65784-80.474784-146.56306-106.57585-61.90522-26.097063-129.236403-39.140591-202.003557-39.140591-72.76115 0-140.092333 13.051534-202.001556 39.140591-61.903218 26.099065-110.760907 61.623014-146.565061 106.57585C17.907081 300.363406 0 349.309159 0 402.265843c0 45.329111 13.543893 88.014292 40.589649 128.01351 27.043755 39.991212 64.188888 73.711844 111.423391 101.135877-3.806781 9.150684-7.711633 17.520798-11.712556 25.150372-4.002924 7.617564-8.760399 14.944917-14.288437 21.998069-5.524035 7.055154-9.805162 12.575186-12.85539 16.562098-3.048227 3.998921-7.999844 9.631035-14.860855 16.856313-6.85901 7.239288-11.242212 12.000766-13.143601 14.280431 0-0.382279-0.762557 0.480351-2.287671 2.575882-1.527116 2.095531-2.383741 3.042222-2.571879 2.864092-0.19214-0.206151-0.954697 0.746545-2.287671 2.842076-1.332974 2.097532-2.001462 3.144297-2.001462 3.144297l-1.431045 2.84808c-0.564412 1.150841-0.952696 2.275662-1.140833 3.426503-0.19214 1.134829-0.288211 2.38174-0.288211 3.710711s0.188137 2.561871 0.576421 3.710711c0.762557 4.945613 2.952156 8.938529 6.5708 12.000766 3.616642 3.042222 7.517491 4.561332 11.712556 4.561332l1.715253 0c19.043911-2.665947 35.427879-5.712173 49.139895-9.14468 58.666854-15.231126 111.623538-39.622943 158.860042-73.143429 34.283043 6.096453 67.807531 9.142678 100.567461 9.142678C475.053011 694.82755 542.392201 681.788025 604.295419 655.68896z"  ></path>' +
    '' +
    '<path d="M983.426362 676.826401c27.055763-39.807078 40.573638-82.554303 40.573638-128.2737 0-46.862231-14.302447-90.698252-42.86331-131.456025-28.574873-40.753769-67.437261-74.66454-116.575155-101.712298 8.754395 28.568869 13.135595 57.520017 13.135595 86.859448 0 51.043286-12.74531 99.424627-38.285967 145.144023-25.522643 45.705386-62.095359 86.082881-109.712141 121.136486-44.192281 31.999375-94.479014 56.563318-150.864202 73.711844-56.369176 17.136518-115.230172 25.714784-176.564975 25.714784-11.424345 0-28.188591-0.754551-50.280729-2.275662 76.56793 50.274724 166.475605 75.425096 269.709014 75.425096 32.765934 0 66.28642-3.054231 100.575467-9.148683 47.234503 33.534496 100.193188 57.904297 158.856039 73.151435 13.714018 3.438512 30.095984 6.478733 49.143898 9.142678 4.569338 0.382279 8.768405-0.952696 12.575186-4.000923 3.808782-3.046225 6.288594-7.225278 7.425424-12.55317-0.17813-2.287671 0-3.542588 0.57442-3.724721 0.562411-0.180132 0.466341-1.425041-0.288211-3.706708-0.75255-2.289673-1.13683-3.432507-1.13683-3.432507l-1.425041-2.850082c-0.396289-0.75255-1.04076-1.80732-1.999461-3.136291-0.952696-1.320965-1.71125-2.287671-2.287671-2.856086-0.560409-0.568415-1.411031-1.527116-2.561871-2.850082-1.13683-1.320965-1.90339-2.185597-2.287671-2.567876-1.90339-2.287671-6.282589-7.047148-13.137597-14.288437-6.863013-7.231282-11.806624-12.849386-14.854851-16.848307-3.048227-4.000923-7.335358-9.520955-12.857392-16.576108-5.520032-7.041143-10.287515-14.376502-14.288437-21.998069-3.998921-7.617564-7.903773-16.001689-11.712556-25.138363C919.249483 750.266046 956.384609 716.647489 983.426362 676.826401z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-user" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M693.5808 300.3648c-2.1632-19.4048 5.6832-82.6752 6.0544-96.3584 0.7936-35.4688-0.0768-38.4-8.6528-72.9472 0 0-10.368-31.3472-26.7136-40.7552l-32.4864-5.6064-20.096-18.6624c-80.96-49.9456-167.7312-14.9376-214.2336 3.9808C330.4704 91.8144 288.128 157.6064 317.6576 298.0864c0.6272 2.9952 0.4864 11.1744 0.4864 13.7984-1.0496 2.496 0 0 0 0-3.968 10.24-13.0816 25.7664-12.352 33.9968 2.5728 28.6208 3.136 97.5104 30.0928 114.4704 2.5088 1.5488 14.6432 2.1376 13.312 2.0224 13.1968 1.1136 13.504 58.8288 16.1536 86.7328 6.7456 18.5088 22.912 20.544 27.584 46.784 0 0-15.4496 0.4352-20.6976 5.0432-16.3712 14.4896-26.3296 59.712-43.7376 71.68-14.5664 3.968-29.1328 8-43.712 11.9296-51.0336 20.992-107.7504 46.1056-158.9248 67.7376-46.5664 19.6992-67.2512 31.7312-75.7376 102.1696 0 33.2544-1.8176 85.3248-0.96 128.896L974.848 983.3472c0.8064-43.5712-2.304-88.8064-2.304-122.1248-12.3264-68.3648-28.352-89.2544-74.9184-108.9536-51.2128-21.632-107.904-46.7456-158.8992-67.7376-14.6304-3.9296-29.1712-7.9616-43.7632-11.9296-17.3824-11.968-26.0736-58.7008-43.6864-71.68-7.5648-5.5808-18.0352 1.2288-27.8784-3.968-4.1344-18.6496 20.4288-32.3712 27.8784-55.7824 6.528-20.6848 0.6912-47.5392 11.0592-66.6752 7.168-13.2736 23.5136-13.376 31.6544-24.7808 7.3856-10.3168 12.2496-28.3648 14.592-40.9984 4.1472-23.1296 2.2784-78.9632 1.1904-80.7168C709.9264 327.9104 694.2208 306.1888 693.5808 300.3648z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-add" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M52.636824 52.879348l917.852448 0 0 14.360056L52.636824 67.239404 52.636824 52.879348 52.636824 52.879348zM956.809715 52.394301l14.553461 0 0 918.725328-14.553461 0L956.809715 52.394301 956.809715 52.394301zM172.268482 498.416634l678.68737 0 0 27.166733-678.68737 0L172.268482 498.416634 172.268482 498.416634zM504.383532 161.741731l26.099425 0 0 697.41285-26.002211 0L504.480746 161.741731 504.383532 161.741731zM52.636824 957.245643l917.852448 0 0 14.360056L52.636824 971.605699 52.636824 957.245643 52.636824 957.245643zM52.636824 52.394301l14.553461 0 0 918.725328L52.636824 971.119629 52.636824 52.394301 52.636824 52.394301z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-message" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M896 0 128 0C57.312 0 0 57.312 0 128l0 512c0 70.688 57.312 128 128 128l192 0 256 256L576 768l320 0c70.688 0 128-57.312 128-128L1024 128C1024 57.312 966.688 0 896 0zM960 640c0 35.312-28.72 64-64 64L512 704l0 165.504L346.504 704 128 704c-35.28 0-64-28.688-64-64L64 128c0-35.312 28.72-64 64-64l768 0c35.28 0 64 28.688 64 64L960 640z"  ></path>' +
    '' +
    '<path d="M192 256l640 0 0-64L192 192 192 256z"  ></path>' +
    '' +
    '<path d="M192 384l640 0 0-64L192 320 192 384z"  ></path>' +
    '' +
    '<path d="M192 512l384 0 0-64L192 448 192 512z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-right1" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M66.28 511.92 66.28 511.92c0-13.1 4.4-24.3 13.1-33.6 8.7-9.3 19.2-14 31.5-14l694.7 0-236.1-252c-8.6-9.2-12.9-20.5-12.9-33.9 0-13.7 4.2-25 12.7-34.1 8.5-9 19.1-13.6 31.9-13.6 12.5 0 23.1 4.6 31.7 13.8l312 333.5c8.6 9.2 12.9 20.5 12.9 33.9s-4.3 24.7-12.9 33.9L632.88 879.32c-8.6 9.2-19.1 13.8-31.7 13.8-12.8 0-23.4-4.5-31.9-13.6-8.5-9.1-12.7-20.4-12.7-34.1 0-13.4 4.3-24.7 12.9-33.9l236.1-252L110.88 559.52c-12.3 0-22.8-4.7-31.5-14C70.68 536.32 66.28 525.12 66.28 511.92L66.28 511.92z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)